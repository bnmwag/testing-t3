import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "@/utils/api";
import Image from "next/image";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>T Hub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="container flex flex-col items-start justify-center gap-8 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-foreground sm:text-[5rem]">
            <span className="text-highlight">hub</span>.bnmwag.dev
          </h1>
          <div className="flex flex-col items-start gap-12">
            <p className="text-foreground">
              add projects and tasks to your dashboard to keep track of your day
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    // undefined, // no input
    { text: sessionData?.user?.name || "test" }
    // { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex w-full flex-col items-start justify-start gap-4">
      <p className="text-center text-2xl text-foreground">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && (
          <span>
            {" "}
            - you can now see this secret message!{" "}
            <span className="rounded-md bg-foreground/10 px-2 py-1">
              {secretMessage}
            </span>{" "}
            🎉
          </span>
        )}
      </p>
      <button
        className="rounded-full bg-highlight px-10 py-3 font-semibold text-white no-underline transition hover:bg-highlight/80"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
